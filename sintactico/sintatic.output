Terminals unused in grammar

    ELE
    CADENA
    OTRO
    SPACE


State 3 conflicts: 3 shift/reduce
State 8 conflicts: 8 shift/reduce
State 17 conflicts: 8 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM LI list-decl list-sent LD

    2 list-decl: ε
    3          | decl
    4          | list-decl decl

    5 decl: tipo list-id PYC

    6 tipo: INT
    7     | FLOAT
    8     | BOOL

    9 list-id: list-id COM IDENTIFICADOR
   10        | IDENTIFICADOR

   11 list-sent: ε
   12          | sent
   13          | list-sent sent

   14 sent: sent-if
   15     | sent-while
   16     | sent-do
   17     | sent-read
   18     | sent-write
   19     | bloque
   20     | sent-assign
   21     | BREAK

   22 sent-if: IF PI exp-bool PD THEN bloque FI
   23        | IF PI exp-bool PD THEN bloque ELSE bloque FI

   24 sent-while: WHILE PI exp-bool PD bloque

   25 sent-do: DO bloque UNTIL PI exp-bool PD PYC

   26 sent-read: READ IDENTIFICADOR PYC

   27 sent-write: WRITE IDENTIFICADOR PYC

   28 bloque: LI list-sent LD

   29 sent-assign: IDENTIFICADOR ASIG exp-bool PYC

   30 exp-bool: exp-bool OR comb
   31         | comb
   32         | factor

   33 comb: comb AND igualdad
   34     | igualdad

   35 igualdad: igualdad IGU rel
   36         | igualdad DIS rel
   37         | rel

   38 rel: expr op-rel expr

   39 op-rel: MEN
   40       | MENIGL
   41       | MAY
   42       | MAYIGL

   43 expr: expr RES term
   44     | expr MAS term
   45     | term

   46 term: term MUL unario
   47     | term DIV unario
   48     | unario

   49 unario: NOT unario
   50       | RES unario
   51       | factor

   52 factor: PI exp-bool PD
   53       | IDENTIFICADOR
   54       | NUMERO
   55       | TRUE
   56       | FALSE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM <program> (258) 1
    IF <i> (259) 22 23
    THEN <then> (260) 22 23
    ELSE <els> (261) 23
    FI <fi> (262) 22 23
    DO <d> (263) 25
    UNTIL <until> (264) 25
    WHILE <whil> (265) 24
    BREAK <brea> (266) 21
    READ <read> (267) 26
    WRITE <write> (268) 27
    FLOAT <floa> (269) 7
    INT <in> (270) 6
    BOOL <boo> (271) 8
    NOT <no> (272) 49
    AND <an> (273) 33
    OR <o> (274) 30
    TRUE <tru> (275) 55
    FALSE <fals> (276) 56
    MAS <mas> (277) 44
    RES <res> (278) 43 50
    MUL <mul> (279) 46
    DIV <div> (280) 47
    ELE <ele> (281)
    MEN <men> (282) 39
    MENIGL <menigl> (283) 40
    MAY <may> (284) 41
    MAYIGL <mayigl> (285) 42
    IGU <igu> (286) 35
    DIS <dis> (287) 36
    ASIG <asig> (288) 29
    PYC <pyc> (289) 5 25 26 27 29
    COM <com> (290) 9
    PI <pi> (291) 22 23 24 25 52
    PD <pd> (292) 22 23 24 25 52
    LI <li> (293) 1 28
    LD <ld> (294) 1 28
    CADENA <cadena> (295)
    NUMERO <numero> (296) 54
    IDENTIFICADOR <identificador> (297) 9 10 26 27 29 53
    OTRO (298)
    SPACE <space> (299)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program (46)
        on left: 1
        on right: 0
    list-decl (47)
        on left: 2 3 4
        on right: 1 4
    decl (48)
        on left: 5
        on right: 3 4
    tipo (49)
        on left: 6 7 8
        on right: 5
    list-id (50)
        on left: 9 10
        on right: 5 9
    list-sent (51)
        on left: 11 12 13
        on right: 1 13 28
    sent (52)
        on left: 14 15 16 17 18 19 20 21
        on right: 12 13
    sent-if (53)
        on left: 22 23
        on right: 14
    sent-while (54)
        on left: 24
        on right: 15
    sent-do (55)
        on left: 25
        on right: 16
    sent-read (56)
        on left: 26
        on right: 17
    sent-write (57)
        on left: 27
        on right: 18
    bloque (58)
        on left: 28
        on right: 19 22 23 24 25
    sent-assign (59)
        on left: 29
        on right: 20
    exp-bool (60)
        on left: 30 31 32
        on right: 22 23 24 25 29 30 52
    comb (61)
        on left: 33 34
        on right: 30 31 33
    igualdad (62)
        on left: 35 36 37
        on right: 33 34 35 36
    rel (63)
        on left: 38
        on right: 35 36 37
    op-rel (64)
        on left: 39 40 41 42
        on right: 38
    expr (65)
        on left: 43 44 45
        on right: 38 43 44
    term (66)
        on left: 46 47 48
        on right: 43 44 45 46 47
    unario (67)
        on left: 49 50 51
        on right: 46 47 48 49 50
    factor (68)
        on left: 52 53 54 55 56
        on right: 32 51


State 0

    0 $accept: • program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM • LI list-decl list-sent LD

    LI  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM LI • list-decl list-sent LD

    FLOAT  shift, and go to state 5
    INT    shift, and go to state 6
    BOOL   shift, and go to state 7

    FLOAT     [reduce using rule 2 (list-decl)]
    INT       [reduce using rule 2 (list-decl)]
    BOOL      [reduce using rule 2 (list-decl)]
    $default  reduce using rule 2 (list-decl)

    list-decl  go to state 8
    decl       go to state 9
    tipo       go to state 10


State 4

    0 $accept: program $end •

    $default  accept


State 5

    7 tipo: FLOAT •

    $default  reduce using rule 7 (tipo)


State 6

    6 tipo: INT •

    $default  reduce using rule 6 (tipo)


State 7

    8 tipo: BOOL •

    $default  reduce using rule 8 (tipo)


State 8

    1 program: PROGRAM LI list-decl • list-sent LD
    4 list-decl: list-decl • decl

    IF             shift, and go to state 11
    DO             shift, and go to state 12
    WHILE          shift, and go to state 13
    BREAK          shift, and go to state 14
    READ           shift, and go to state 15
    WRITE          shift, and go to state 16
    FLOAT          shift, and go to state 5
    INT            shift, and go to state 6
    BOOL           shift, and go to state 7
    LI             shift, and go to state 17
    IDENTIFICADOR  shift, and go to state 18

    IF             [reduce using rule 11 (list-sent)]
    DO             [reduce using rule 11 (list-sent)]
    WHILE          [reduce using rule 11 (list-sent)]
    BREAK          [reduce using rule 11 (list-sent)]
    READ           [reduce using rule 11 (list-sent)]
    WRITE          [reduce using rule 11 (list-sent)]
    LI             [reduce using rule 11 (list-sent)]
    IDENTIFICADOR  [reduce using rule 11 (list-sent)]
    $default       reduce using rule 11 (list-sent)

    decl         go to state 19
    tipo         go to state 10
    list-sent    go to state 20
    sent         go to state 21
    sent-if      go to state 22
    sent-while   go to state 23
    sent-do      go to state 24
    sent-read    go to state 25
    sent-write   go to state 26
    bloque       go to state 27
    sent-assign  go to state 28


State 9

    3 list-decl: decl •

    $default  reduce using rule 3 (list-decl)


State 10

    5 decl: tipo • list-id PYC

    IDENTIFICADOR  shift, and go to state 29

    list-id  go to state 30


State 11

   22 sent-if: IF • PI exp-bool PD THEN bloque FI
   23        | IF • PI exp-bool PD THEN bloque ELSE bloque FI

    PI  shift, and go to state 31


State 12

   25 sent-do: DO • bloque UNTIL PI exp-bool PD PYC

    LI  shift, and go to state 17

    bloque  go to state 32


State 13

   24 sent-while: WHILE • PI exp-bool PD bloque

    PI  shift, and go to state 33


State 14

   21 sent: BREAK •

    $default  reduce using rule 21 (sent)


State 15

   26 sent-read: READ • IDENTIFICADOR PYC

    IDENTIFICADOR  shift, and go to state 34


State 16

   27 sent-write: WRITE • IDENTIFICADOR PYC

    IDENTIFICADOR  shift, and go to state 35


State 17

   28 bloque: LI • list-sent LD

    IF             shift, and go to state 11
    DO             shift, and go to state 12
    WHILE          shift, and go to state 13
    BREAK          shift, and go to state 14
    READ           shift, and go to state 15
    WRITE          shift, and go to state 16
    LI             shift, and go to state 17
    IDENTIFICADOR  shift, and go to state 18

    IF             [reduce using rule 11 (list-sent)]
    DO             [reduce using rule 11 (list-sent)]
    WHILE          [reduce using rule 11 (list-sent)]
    BREAK          [reduce using rule 11 (list-sent)]
    READ           [reduce using rule 11 (list-sent)]
    WRITE          [reduce using rule 11 (list-sent)]
    LI             [reduce using rule 11 (list-sent)]
    IDENTIFICADOR  [reduce using rule 11 (list-sent)]
    $default       reduce using rule 11 (list-sent)

    list-sent    go to state 36
    sent         go to state 21
    sent-if      go to state 22
    sent-while   go to state 23
    sent-do      go to state 24
    sent-read    go to state 25
    sent-write   go to state 26
    bloque       go to state 27
    sent-assign  go to state 28


State 18

   29 sent-assign: IDENTIFICADOR • ASIG exp-bool PYC

    ASIG  shift, and go to state 37


State 19

    4 list-decl: list-decl decl •

    $default  reduce using rule 4 (list-decl)


State 20

    1 program: PROGRAM LI list-decl list-sent • LD
   13 list-sent: list-sent • sent

    IF             shift, and go to state 11
    DO             shift, and go to state 12
    WHILE          shift, and go to state 13
    BREAK          shift, and go to state 14
    READ           shift, and go to state 15
    WRITE          shift, and go to state 16
    LI             shift, and go to state 17
    LD             shift, and go to state 38
    IDENTIFICADOR  shift, and go to state 18

    sent         go to state 39
    sent-if      go to state 22
    sent-while   go to state 23
    sent-do      go to state 24
    sent-read    go to state 25
    sent-write   go to state 26
    bloque       go to state 27
    sent-assign  go to state 28


State 21

   12 list-sent: sent •

    $default  reduce using rule 12 (list-sent)


State 22

   14 sent: sent-if •

    $default  reduce using rule 14 (sent)


State 23

   15 sent: sent-while •

    $default  reduce using rule 15 (sent)


State 24

   16 sent: sent-do •

    $default  reduce using rule 16 (sent)


State 25

   17 sent: sent-read •

    $default  reduce using rule 17 (sent)


State 26

   18 sent: sent-write •

    $default  reduce using rule 18 (sent)


State 27

   19 sent: bloque •

    $default  reduce using rule 19 (sent)


State 28

   20 sent: sent-assign •

    $default  reduce using rule 20 (sent)


State 29

   10 list-id: IDENTIFICADOR •

    $default  reduce using rule 10 (list-id)


State 30

    5 decl: tipo list-id • PYC
    9 list-id: list-id • COM IDENTIFICADOR

    PYC  shift, and go to state 40
    COM  shift, and go to state 41


State 31

   22 sent-if: IF PI • exp-bool PD THEN bloque FI
   23        | IF PI • exp-bool PD THEN bloque ELSE bloque FI

    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    RES            shift, and go to state 45
    PI             shift, and go to state 46
    NUMERO         shift, and go to state 47
    IDENTIFICADOR  shift, and go to state 48

    exp-bool  go to state 49
    comb      go to state 50
    igualdad  go to state 51
    rel       go to state 52
    expr      go to state 53
    term      go to state 54
    unario    go to state 55
    factor    go to state 56


State 32

   25 sent-do: DO bloque • UNTIL PI exp-bool PD PYC

    UNTIL  shift, and go to state 57


State 33

   24 sent-while: WHILE PI • exp-bool PD bloque

    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    RES            shift, and go to state 45
    PI             shift, and go to state 46
    NUMERO         shift, and go to state 47
    IDENTIFICADOR  shift, and go to state 48

    exp-bool  go to state 58
    comb      go to state 50
    igualdad  go to state 51
    rel       go to state 52
    expr      go to state 53
    term      go to state 54
    unario    go to state 55
    factor    go to state 56


State 34

   26 sent-read: READ IDENTIFICADOR • PYC

    PYC  shift, and go to state 59


State 35

   27 sent-write: WRITE IDENTIFICADOR • PYC

    PYC  shift, and go to state 60


State 36

   13 list-sent: list-sent • sent
   28 bloque: LI list-sent • LD

    IF             shift, and go to state 11
    DO             shift, and go to state 12
    WHILE          shift, and go to state 13
    BREAK          shift, and go to state 14
    READ           shift, and go to state 15
    WRITE          shift, and go to state 16
    LI             shift, and go to state 17
    LD             shift, and go to state 61
    IDENTIFICADOR  shift, and go to state 18

    sent         go to state 39
    sent-if      go to state 22
    sent-while   go to state 23
    sent-do      go to state 24
    sent-read    go to state 25
    sent-write   go to state 26
    bloque       go to state 27
    sent-assign  go to state 28


State 37

   29 sent-assign: IDENTIFICADOR ASIG • exp-bool PYC

    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    RES            shift, and go to state 45
    PI             shift, and go to state 46
    NUMERO         shift, and go to state 47
    IDENTIFICADOR  shift, and go to state 48

    exp-bool  go to state 62
    comb      go to state 50
    igualdad  go to state 51
    rel       go to state 52
    expr      go to state 53
    term      go to state 54
    unario    go to state 55
    factor    go to state 56


State 38

    1 program: PROGRAM LI list-decl list-sent LD •

    $default  reduce using rule 1 (program)


State 39

   13 list-sent: list-sent sent •

    $default  reduce using rule 13 (list-sent)


State 40

    5 decl: tipo list-id PYC •

    $default  reduce using rule 5 (decl)


State 41

    9 list-id: list-id COM • IDENTIFICADOR

    IDENTIFICADOR  shift, and go to state 63


State 42

   49 unario: NOT • unario

    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    RES            shift, and go to state 45
    PI             shift, and go to state 46
    NUMERO         shift, and go to state 47
    IDENTIFICADOR  shift, and go to state 48

    unario  go to state 64
    factor  go to state 65


State 43

   55 factor: TRUE •

    $default  reduce using rule 55 (factor)


State 44

   56 factor: FALSE •

    $default  reduce using rule 56 (factor)


State 45

   50 unario: RES • unario

    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    RES            shift, and go to state 45
    PI             shift, and go to state 46
    NUMERO         shift, and go to state 47
    IDENTIFICADOR  shift, and go to state 48

    unario  go to state 66
    factor  go to state 65


State 46

   52 factor: PI • exp-bool PD

    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    RES            shift, and go to state 45
    PI             shift, and go to state 46
    NUMERO         shift, and go to state 47
    IDENTIFICADOR  shift, and go to state 48

    exp-bool  go to state 67
    comb      go to state 50
    igualdad  go to state 51
    rel       go to state 52
    expr      go to state 53
    term      go to state 54
    unario    go to state 55
    factor    go to state 56


State 47

   54 factor: NUMERO •

    $default  reduce using rule 54 (factor)


State 48

   53 factor: IDENTIFICADOR •

    $default  reduce using rule 53 (factor)


State 49

   22 sent-if: IF PI exp-bool • PD THEN bloque FI
   23        | IF PI exp-bool • PD THEN bloque ELSE bloque FI
   30 exp-bool: exp-bool • OR comb

    OR  shift, and go to state 68
    PD  shift, and go to state 69


State 50

   31 exp-bool: comb •
   33 comb: comb • AND igualdad

    AND  shift, and go to state 70

    $default  reduce using rule 31 (exp-bool)


State 51

   34 comb: igualdad •
   35 igualdad: igualdad • IGU rel
   36         | igualdad • DIS rel

    IGU  shift, and go to state 71
    DIS  shift, and go to state 72

    $default  reduce using rule 34 (comb)


State 52

   37 igualdad: rel •

    $default  reduce using rule 37 (igualdad)


State 53

   38 rel: expr • op-rel expr
   43 expr: expr • RES term
   44     | expr • MAS term

    MAS     shift, and go to state 73
    RES     shift, and go to state 74
    MEN     shift, and go to state 75
    MENIGL  shift, and go to state 76
    MAY     shift, and go to state 77
    MAYIGL  shift, and go to state 78

    op-rel  go to state 79


State 54

   45 expr: term •
   46 term: term • MUL unario
   47     | term • DIV unario

    MUL  shift, and go to state 80
    DIV  shift, and go to state 81

    $default  reduce using rule 45 (expr)


State 55

   48 term: unario •

    $default  reduce using rule 48 (term)


State 56

   32 exp-bool: factor •
   51 unario: factor •

    OR        reduce using rule 32 (exp-bool)
    PYC       reduce using rule 32 (exp-bool)
    PD        reduce using rule 32 (exp-bool)
    $default  reduce using rule 51 (unario)


State 57

   25 sent-do: DO bloque UNTIL • PI exp-bool PD PYC

    PI  shift, and go to state 82


State 58

   24 sent-while: WHILE PI exp-bool • PD bloque
   30 exp-bool: exp-bool • OR comb

    OR  shift, and go to state 68
    PD  shift, and go to state 83


State 59

   26 sent-read: READ IDENTIFICADOR PYC •

    $default  reduce using rule 26 (sent-read)


State 60

   27 sent-write: WRITE IDENTIFICADOR PYC •

    $default  reduce using rule 27 (sent-write)


State 61

   28 bloque: LI list-sent LD •

    $default  reduce using rule 28 (bloque)


State 62

   29 sent-assign: IDENTIFICADOR ASIG exp-bool • PYC
   30 exp-bool: exp-bool • OR comb

    OR   shift, and go to state 68
    PYC  shift, and go to state 84


State 63

    9 list-id: list-id COM IDENTIFICADOR •

    $default  reduce using rule 9 (list-id)


State 64

   49 unario: NOT unario •

    $default  reduce using rule 49 (unario)


State 65

   51 unario: factor •

    $default  reduce using rule 51 (unario)


State 66

   50 unario: RES unario •

    $default  reduce using rule 50 (unario)


State 67

   30 exp-bool: exp-bool • OR comb
   52 factor: PI exp-bool • PD

    OR  shift, and go to state 68
    PD  shift, and go to state 85


State 68

   30 exp-bool: exp-bool OR • comb

    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    RES            shift, and go to state 45
    PI             shift, and go to state 46
    NUMERO         shift, and go to state 47
    IDENTIFICADOR  shift, and go to state 48

    comb      go to state 86
    igualdad  go to state 51
    rel       go to state 52
    expr      go to state 53
    term      go to state 54
    unario    go to state 55
    factor    go to state 65


State 69

   22 sent-if: IF PI exp-bool PD • THEN bloque FI
   23        | IF PI exp-bool PD • THEN bloque ELSE bloque FI

    THEN  shift, and go to state 87


State 70

   33 comb: comb AND • igualdad

    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    RES            shift, and go to state 45
    PI             shift, and go to state 46
    NUMERO         shift, and go to state 47
    IDENTIFICADOR  shift, and go to state 48

    igualdad  go to state 88
    rel       go to state 52
    expr      go to state 53
    term      go to state 54
    unario    go to state 55
    factor    go to state 65


State 71

   35 igualdad: igualdad IGU • rel

    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    RES            shift, and go to state 45
    PI             shift, and go to state 46
    NUMERO         shift, and go to state 47
    IDENTIFICADOR  shift, and go to state 48

    rel     go to state 89
    expr    go to state 53
    term    go to state 54
    unario  go to state 55
    factor  go to state 65


State 72

   36 igualdad: igualdad DIS • rel

    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    RES            shift, and go to state 45
    PI             shift, and go to state 46
    NUMERO         shift, and go to state 47
    IDENTIFICADOR  shift, and go to state 48

    rel     go to state 90
    expr    go to state 53
    term    go to state 54
    unario  go to state 55
    factor  go to state 65


State 73

   44 expr: expr MAS • term

    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    RES            shift, and go to state 45
    PI             shift, and go to state 46
    NUMERO         shift, and go to state 47
    IDENTIFICADOR  shift, and go to state 48

    term    go to state 91
    unario  go to state 55
    factor  go to state 65


State 74

   43 expr: expr RES • term

    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    RES            shift, and go to state 45
    PI             shift, and go to state 46
    NUMERO         shift, and go to state 47
    IDENTIFICADOR  shift, and go to state 48

    term    go to state 92
    unario  go to state 55
    factor  go to state 65


State 75

   39 op-rel: MEN •

    $default  reduce using rule 39 (op-rel)


State 76

   40 op-rel: MENIGL •

    $default  reduce using rule 40 (op-rel)


State 77

   41 op-rel: MAY •

    $default  reduce using rule 41 (op-rel)


State 78

   42 op-rel: MAYIGL •

    $default  reduce using rule 42 (op-rel)


State 79

   38 rel: expr op-rel • expr

    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    RES            shift, and go to state 45
    PI             shift, and go to state 46
    NUMERO         shift, and go to state 47
    IDENTIFICADOR  shift, and go to state 48

    expr    go to state 93
    term    go to state 54
    unario  go to state 55
    factor  go to state 65


State 80

   46 term: term MUL • unario

    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    RES            shift, and go to state 45
    PI             shift, and go to state 46
    NUMERO         shift, and go to state 47
    IDENTIFICADOR  shift, and go to state 48

    unario  go to state 94
    factor  go to state 65


State 81

   47 term: term DIV • unario

    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    RES            shift, and go to state 45
    PI             shift, and go to state 46
    NUMERO         shift, and go to state 47
    IDENTIFICADOR  shift, and go to state 48

    unario  go to state 95
    factor  go to state 65


State 82

   25 sent-do: DO bloque UNTIL PI • exp-bool PD PYC

    NOT            shift, and go to state 42
    TRUE           shift, and go to state 43
    FALSE          shift, and go to state 44
    RES            shift, and go to state 45
    PI             shift, and go to state 46
    NUMERO         shift, and go to state 47
    IDENTIFICADOR  shift, and go to state 48

    exp-bool  go to state 96
    comb      go to state 50
    igualdad  go to state 51
    rel       go to state 52
    expr      go to state 53
    term      go to state 54
    unario    go to state 55
    factor    go to state 56


State 83

   24 sent-while: WHILE PI exp-bool PD • bloque

    LI  shift, and go to state 17

    bloque  go to state 97


State 84

   29 sent-assign: IDENTIFICADOR ASIG exp-bool PYC •

    $default  reduce using rule 29 (sent-assign)


State 85

   52 factor: PI exp-bool PD •

    $default  reduce using rule 52 (factor)


State 86

   30 exp-bool: exp-bool OR comb •
   33 comb: comb • AND igualdad

    AND  shift, and go to state 70

    $default  reduce using rule 30 (exp-bool)


State 87

   22 sent-if: IF PI exp-bool PD THEN • bloque FI
   23        | IF PI exp-bool PD THEN • bloque ELSE bloque FI

    LI  shift, and go to state 17

    bloque  go to state 98


State 88

   33 comb: comb AND igualdad •
   35 igualdad: igualdad • IGU rel
   36         | igualdad • DIS rel

    IGU  shift, and go to state 71
    DIS  shift, and go to state 72

    $default  reduce using rule 33 (comb)


State 89

   35 igualdad: igualdad IGU rel •

    $default  reduce using rule 35 (igualdad)


State 90

   36 igualdad: igualdad DIS rel •

    $default  reduce using rule 36 (igualdad)


State 91

   44 expr: expr MAS term •
   46 term: term • MUL unario
   47     | term • DIV unario

    MUL  shift, and go to state 80
    DIV  shift, and go to state 81

    $default  reduce using rule 44 (expr)


State 92

   43 expr: expr RES term •
   46 term: term • MUL unario
   47     | term • DIV unario

    MUL  shift, and go to state 80
    DIV  shift, and go to state 81

    $default  reduce using rule 43 (expr)


State 93

   38 rel: expr op-rel expr •
   43 expr: expr • RES term
   44     | expr • MAS term

    MAS  shift, and go to state 73
    RES  shift, and go to state 74

    $default  reduce using rule 38 (rel)


State 94

   46 term: term MUL unario •

    $default  reduce using rule 46 (term)


State 95

   47 term: term DIV unario •

    $default  reduce using rule 47 (term)


State 96

   25 sent-do: DO bloque UNTIL PI exp-bool • PD PYC
   30 exp-bool: exp-bool • OR comb

    OR  shift, and go to state 68
    PD  shift, and go to state 99


State 97

   24 sent-while: WHILE PI exp-bool PD bloque •

    $default  reduce using rule 24 (sent-while)


State 98

   22 sent-if: IF PI exp-bool PD THEN bloque • FI
   23        | IF PI exp-bool PD THEN bloque • ELSE bloque FI

    ELSE  shift, and go to state 100
    FI    shift, and go to state 101


State 99

   25 sent-do: DO bloque UNTIL PI exp-bool PD • PYC

    PYC  shift, and go to state 102


State 100

   23 sent-if: IF PI exp-bool PD THEN bloque ELSE • bloque FI

    LI  shift, and go to state 17

    bloque  go to state 103


State 101

   22 sent-if: IF PI exp-bool PD THEN bloque FI •

    $default  reduce using rule 22 (sent-if)


State 102

   25 sent-do: DO bloque UNTIL PI exp-bool PD PYC •

    $default  reduce using rule 25 (sent-do)


State 103

   23 sent-if: IF PI exp-bool PD THEN bloque ELSE bloque • FI

    FI  shift, and go to state 104


State 104

   23 sent-if: IF PI exp-bool PD THEN bloque ELSE bloque FI •

    $default  reduce using rule 23 (sent-if)
